/* Задание №1 */
CREATE OR REPLACE PROCEDURE NEW_JOB (
    p_job_id     IN JOBS.JOB_ID%TYPE,
    p_job_title  IN JOBS.JOB_TITLE%TYPE,
    p_min_salary IN JOBS.MIN_SALARY%TYPE
) AS
BEGIN
    INSERT INTO JOBS (JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY)
    VALUES (p_job_id, p_job_title, p_min_salary, p_min_salary * 2);
END;
/

BEGIN
    NEW_JOB('SY_ANAL', 'System Analyst', 6000);
END;
/

/* Задание №2 */
CREATE OR REPLACE PROCEDURE ADD_JOB_HIST (
    p_employee_id IN EMPLOYEES.EMPLOYEE_ID%TYPE,
    p_new_job_id  IN JOBS.JOB_ID%TYPE
) AS
    v_hire_date EMPLOYEES.HIRE_DATE%TYPE;
    v_min_salary JOBS.MIN_SALARY%TYPE;
BEGIN
    SELECT HIRE_DATE INTO v_hire_date FROM EMPLOYEES WHERE EMPLOYEE_ID = p_employee_id;
    INSERT INTO JOB_HISTORY (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
    SELECT EMPLOYEE_ID, HIRE_DATE, SYSDATE, JOB_ID, DEPARTMENT_ID
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID = p_employee_id;
    SELECT MIN_SALARY INTO v_min_salary FROM JOBS WHERE JOB_ID = p_new_job_id;
    UPDATE EMPLOYEES
    SET JOB_ID = p_new_job_id,
        HIRE_DATE = SYSDATE,
        SALARY = v_min_salary + 500
    WHERE EMPLOYEE_ID = p_employee_id;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Employee ID not found.');
END;
/
ALTER TABLE EMPLOYEES DISABLE ALL TRIGGERS;
ALTER TABLE JOBS DISABLE ALL TRIGGERS;
ALTER TABLE JOB_HISTORY DISABLE ALL TRIGGERS;

BEGIN
    ADD_JOB_HIST(106, 'SY_ANAL');
END;
/

ALTER TABLE EMPLOYEES ENABLE ALL TRIGGERS;
ALTER TABLE JOBS ENABLE ALL TRIGGERS;
ALTER TABLE JOB_HISTORY ENABLE ALL TRIGGERS;

/* Задание №3 */
CREATE OR REPLACE PROCEDURE UPD_JOBSAL (
    p_job_id     IN JOBS.JOB_ID%TYPE,
    p_min_salary IN JOBS.MIN_SALARY%TYPE,
    p_max_salary IN JOBS.MAX_SALARY%TYPE
) AS
BEGIN
    IF p_max_salary < p_min_salary THEN
        RAISE_APPLICATION_ERROR(-20001, 'Maximum salary cannot be less than minimum salary.');
    END IF;

    UPDATE JOBS
    SET MIN_SALARY = p_min_salary, MAX_SALARY = p_max_salary
    WHERE JOB_ID = p_job_id;

    IF SQL%ROWCOUNT = 0 THEN
        RAISE_APPLICATION_ERROR(-20002, 'Job ID not found.');
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE = -54 THEN
            DBMS_OUTPUT.PUT_LINE('Resource locked/busy.');
        ELSE
            RAISE;
        END IF;
END;
/

ALTER TABLE EMPLOYEES DISABLE ALL TRIGGERS;
ALTER TABLE JOBS DISABLE ALL TRIGGERS;

BEGIN
    UPD_JOBSAL('SY_ANAL', 7000, 14000);
END;
/

ALTER TABLE EMPLOYEES ENABLE ALL TRIGGERS;
ALTER TABLE JOBS ENABLE ALL TRIGGERS;

/* Задание №4 */
CREATE OR REPLACE FUNCTION GET_YEARS_SERVICE (
    p_employee_id IN EMPLOYEES.EMPLOYEE_ID%TYPE
) RETURN NUMBER AS
    v_years NUMBER;
BEGIN
    SELECT TRUNC(MONTHS_BETWEEN(SYSDATE, HIRE_DATE) / 12)
    INTO v_years
    FROM EMPLOYEES
    WHERE EMPLOYEE_ID = p_employee_id;

    RETURN v_years;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN NULL;
END;
/

BEGIN
    DBMS_OUTPUT.PUT_LINE('Years of Service: ' || GET_YEARS_SERVICE(106));
END;
/

/* Задание №5 */
CREATE OR REPLACE FUNCTION GET_JOB_COUNT (
    p_employee_id IN EMPLOYEES.EMPLOYEE_ID%TYPE
) RETURN NUMBER AS
    v_count NUMBER;
BEGIN
    SELECT COUNT(*)
    INTO v_count
    FROM (
        SELECT DISTINCT JOB_ID FROM JOB_HISTORY WHERE EMPLOYEE_ID = p_employee_id
        UNION
        SELECT JOB_ID FROM EMPLOYEES WHERE EMPLOYEE_ID = p_employee_id
    );

    RETURN v_count;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN NULL;
END;
/

BEGIN
    DBMS_OUTPUT.PUT_LINE('Job Count: ' || GET_JOB_COUNT(176));
END;
/

/* Задание №6 */
CREATE OR REPLACE TRIGGER CHECK_SAL_RANGE
BEFORE UPDATE OF MIN_SALARY, MAX_SALARY ON JOBS
FOR EACH ROW
DECLARE
    v_invalid_employee EXCEPTION;
    PRAGMA EXCEPTION_INIT(v_invalid_employee, -20003);
BEGIN
    IF EXISTS (
        SELECT 1
        FROM EMPLOYEES
        WHERE JOB_ID = :OLD.JOB_ID
          AND (SALARY < :NEW.MIN_SALARY OR SALARY > :NEW.MAX_SALARY)
    ) THEN
        RAISE v_invalid_employee;
    END IF;
EXCEPTION
    WHEN v_invalid_employee THEN
        RAISE_APPLICATION_ERROR(-20003, 'Salary range change violates employee records.');
END;
/

UPDATE JOBS SET MIN_SALARY = 7000, MAX_SALARY = 18000 WHERE JOB_ID = 'SY_ANAL';
